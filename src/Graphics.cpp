/************************************************************************
* \brief: NeoPhysIx - ultra fast 3D-physics simulation                  *
*																		*
* (c) copyright by Jörn Fischer											*
*                                                                       *
*        ***  ITS PROHIBITED TO DISTRIBUTE THIS SOURCE!  ***            *
*        ***************************************************            *
*																		* 
* @autor: Prof.Dr.Jörn Fischer											*
* @email: j.fischer@hs-mannheim.de										*
*                                                                       *
* @file : Graphics.cpp                                                  *
*************************************************************************/
#include <windows.h>
#include <ctime>
#include <gl/gl.h>
#include <gl/glu.h>
#include <cmath>
#include "GlobalDefs.h"
#include "PhysicsEngine.h"
#include "Graphics.h"
#include "Math.h"


HWND    hWnd;
HDC     hDC;
HGLRC   hRC;

extern physics NeoPhysIx;
extern unsigned char inkey;
extern int mousex,mousey,mousekey;
extern float colorR, colorG, colorB;


int myMain();

float xMove,yMove,zMove;
float xRotate,yRotate;

GLuint objects = -1;
int ObjectCounter = 0;

char letter[256][15][11]={{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"####      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   ####   ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"####      ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"#######   ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ###     ",
" #####    ",
" #####    ",
" #####    ",
"  ###     ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"#######   ",
"#######   ",
"#######   ",
"#######   ",
"##   ##   ",
"#     #   ",
"#     #   ",
"#     #   ",
"##   ##   ",
"#######   ",
"#######   ",
"#######   "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"     ##   ",
"    # #   ",
"    # #   ",
"   #      ",
"   #      ",
"  ##      ",
" #  #     ",
" #  #     ",
"  ##      "},{
"          ",
"          ",
"          ",
"          ",
"##########",
"##      ##",
"##      ##",
"##      ##",
"##      ##",
"##      ##",
"##      ##",
"##      ##",
"##      ##",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"     ##   ",
"  ### #   ",
"  #  ##   ",
"  ### #   ",
"  #   #   ",
"  #   #   ",
"  #   #   ",
"  #  ##   ",
" ##  ##   ",
" ##       "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" # # #    ",
" # # #    ",
"  # #     ",
"  # #     ",
" ## ##    ",
"  # #     ",
"  # #     ",
" # # #    ",
" # # #    ",
"          "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"#######   ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"          ",
"      #   ",
"     ##   ",
"    ###   ",
"   ####   ",
"  #####   ",
" ######   ",
"  #####   ",
"   ####   ",
"    ###   ",
"     ##   ",
"      #   "},{
"          ",
"          ",
"          ",
"   #      ",
"  ###     ",
" # # #    ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
" # # #    ",
"  ###     "},{
"          ",
"          ",
"          ",
"          ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"  #  #    ",
"          ",
"          ",
"  #  #    "},{
"          ",
"          ",
"          ",
"          ",
"  ## #    ",
" # # #    ",
" # # #    ",
" # # #    ",
" # # #    ",
" # # #    ",
"  ## #    ",
"   # #    ",
"   # #    ",
"   # #    ",
"   # #    "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"#######   ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"#######   ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"####      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"          ",
"   #      ",
"  ###     ",
" # # #    ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   ####   ",
"   #      ",
"   #      ",
"   #      ",
"   #      ",
"   #      "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"    #     ",
"     #    ",
" ######   ",
"     #    ",
"    #     ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   #      ",
"  #       ",
" ######   ",
"  #       ",
"   #      ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"          ",
"   ####   ",
"   ####   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ####### ",
"  ######  ",
"  ######  ",
"  ### ##  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"   ####   ",
"   ####   ",
" ######## ",
"   ####   ",
"   ####   ",
" ######## ",
"  #####   ",
"  #####   ",
"  #####   ",
"  #####   "},{
"          ",
"          ",
"          ",
"    ##    ",
"   #####  ",
"  ##  ##  ",
" ##       ",
" ###      ",
"  ####    ",
"     ###  ",
"       ## ",
" ##   ### ",
" #######  ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"  ####    ",
" ##  ##   ",
" ##  ##   ",
"  ####    ",
"    ##### ",
" #####    ",
"    ####  ",
"   ##  ## ",
"   ##  ## ",
"    ####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   #####  ",
"  ###     ",
"   ##     ",
"   ###    ",
"  ####### ",
" ### ###  ",
"  ## ###  ",
"  ####### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"   ###    ",
"    ##    ",
"    ##    ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"      ##  ",
"     ###  ",
"     ##   ",
"     ##   ",
"    ###   ",
"    ###   ",
"    ###   ",
"    ###   ",
"     ##   ",
"     ##   ",
"     ###  "},{
"          ",
"          ",
"          ",
"          ",
"  ##      ",
"  ###     ",
"   ##     ",
"   ###    ",
"   ###    ",
"   ###    ",
"   ###    ",
"   ###    ",
"   ###    ",
"   ##     ",
"  ###     "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
" ######## ",
"  ######  ",
"   ####   ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"##########",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ###    ",
"   ###    ",
"  ###     ",
"  ###     "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          "},{
"          ",
"          ",
"          ",
"      ### ",
"      ##  ",
"     ###  ",
"     ##   ",
"    ###   ",
"    ##    ",
"   ###    ",
"   ##     ",
"  ###     ",
"  ##      ",
" ###      ",
" ##       "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ##  ##  ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###   ## ",
"  ##  ##  ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ###    ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  #####   ",
" ### ###  ",
" ##   ##  ",
"      ##  ",
"     ###  ",
"    ###   ",
"   ###    ",
"  ###     ",
" ###  ##  ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ###  ### ",
"       ## ",
"      ##  ",
"   ####   ",
"      ##  ",
"       ## ",
"       ## ",
" ##   ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"     ###  ",
"    ####  ",
"   #####  ",
"   #####  ",
"  ## ###  ",
" ### ###  ",
" ######## ",
"     ###  ",
"     ###  ",
"    ##### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
"  ##      ",
"  ##      ",
"  ##      ",
"  ######  ",
"      ### ",
"       ## ",
"       ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ##### ",
"   ###    ",
"  ##      ",
"  ##      ",
" #######  ",
" ####  ## ",
" ###   ## ",
"  ##   ## ",
"  ###  ## ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
" ######## ",
" ##   ### ",
"      ##  ",
"      ##  ",
"     ###  ",
"     ##   ",
"     ##   ",
"    ###   ",
"    ##    ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  #####   ",
"  ##  ##  ",
" ##   ### ",
" ###  ##  ",
"  ######  ",
"  ##  ##  ",
" ##   ### ",
" ##    ## ",
" ###  ##  ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ##  ##  ",
" ###   ## ",
" ###   ## ",
"  ##  ### ",
"   ###### ",
"       ## ",
"      ### ",
"     ###  ",
"  #####   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          ",
"          ",
"   ####   ",
"   ###    ",
"  ###     ",
"  ##      "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"       ## ",
"     ###  ",
"   ###    ",
"  ###     ",
"###       ",
"  ###     ",
"   ####   ",
"     ###  ",
"       ## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
"          ",
"          ",
"##########",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ##       ",
"  ###     ",
"   ####   ",
"     ###  ",
"       ###",
"     ###  ",
"   ####   ",
"  ###     ",
" ##       ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   #####  ",
" ###  ### ",
" ###   ## ",
"       ## ",
"     ###  ",
"    ###   ",
"          ",
"   ####   ",
"   ####   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   #####  ",
"  ##  ##  ",
" ###  ### ",
" ##  #### ",
" ## ##### ",
" ######## ",
" ## ##### ",
" ## ##### ",
" ###      ",
"  ##  ##  ",
"   #####  "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"########  ",
" ###  ### ",
" ###   ## ",
" ###  ### ",
" #######  ",
" ###   ## ",
" ###    ##",
" ###   ###",
"######### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
" ###  ####",
" ##    ###",
"##        ",
"##        ",
"###       ",
" ##       ",
" ###   ###",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"########  ",
"  ##   ## ",
"  ##   ###",
"  ##    ##",
"  ##    ##",
"  ##    ##",
"  ##    ##",
"  ##   ## ",
"########  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"######### ",
" ###   ## ",
" ###   ## ",
" ######   ",
" ######   ",
" ######   ",
" ###      ",
" ###   ## ",
"######### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" #########",
"  ##    ##",
"  ##    ##",
"  ## ##   ",
"  #####   ",
"  ## ##   ",
"  ##      ",
"  ##      ",
" ######   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
" ##       ",
"###       ",
"##        ",
"### ######",
" ##    ## ",
" ##    ## ",
"  ####### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ######## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   #######",
"      ##  ",
"      ##  ",
"      ##  ",
"      ##  ",
" ##   ##  ",
" ##   ##  ",
" ### ###  ",
"  #####   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ###  ##  ",
" ######   ",
" #####    ",
" ######   ",
" ###  ##  ",
" ###  ##  ",
" ###   ## ",
"#####  ###",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"#######   ",
"  ###     ",
"  ###     ",
"  ###     ",
"  ###     ",
"  ###   ##",
"  ###   ##",
"  ###   ##",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"####   ###",
"####  ### ",
"##### ### ",
"######### ",
"######### ",
"### ##### ",
"###    ## ",
"###    ## ",
"####  ####",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"#### #####",
" ###   ## ",
" ####  ## ",
" ##### ## ",
" ## ## ## ",
" ## ##### ",
" ##  #### ",
" ##   ### ",
"##### ### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" #######  ",
"  ##   ## ",
"  ##    ##",
"  ##    ##",
"  ##   ## ",
"  ####### ",
"  ##      ",
"  ##      ",
" ######   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   #####  ",
" ###  ### ",
" ##     ##",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"  ######  ",
"  ########"},{
"          ",
"          ",
"          ",
"          ",
"          ",
"########  ",
" ###  ### ",
" ###   ## ",
" ###  ### ",
" ######   ",
" ### ###  ",
" ###  ##  ",
" ###   ## ",
"#####  ###",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
" ##    ## ",
" ###      ",
"  ######  ",
"      ### ",
" ##    ## ",
" ###   ## ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"######### ",
"##  ## ## ",
"##  ## ## ",
"##  ## ## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
"  ##  ##  ",
"  ##  ##  ",
"   #####  ",
"   ####   ",
"   ####   ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"#### #####",
"##     ## ",
"###### ## ",
" ##### ## ",
" ######## ",
" ######## ",
" ### #### ",
" ### #### ",
" ###  ##  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"#### #####",
" ##   ### ",
"  ## ###  ",
"   ####   ",
"   ###    ",
"   ####   ",
"  ## ###  ",
" ##   ### ",
"#### #####",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"####  ####",
" ###   ## ",
"  ##  ##  ",
"   ####   ",
"    ###   ",
"    ##    ",
"    ##    ",
"    ##    ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
" ###  ### ",
"     ###  ",
"     ##   ",
"    ##    ",
"   ##  ## ",
"  ##   ## ",
" ###   ## ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ####  ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
" ##       ",
" ###      ",
"  ##      ",
"  ###     ",
"   ##     ",
"   ###    ",
"    ##    ",
"    ###   ",
"     ##   ",
"     ###  ",
"      ##  ",
"      ### "},{
"          ",
"          ",
"          ",
"          ",
"  ####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
" ###  ### ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ##     ",
"    ##    ",
"     ##   ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"###       ",
" ##       ",
" ##       ",
" #######  ",
" ####  ## ",
" ##    ###",
" ##     ##",
" ##    ###",
" ###   ## ",
"########  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
" ##       ",
" ##       ",
" ##       ",
" ###   ###",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"      ### ",
"       ## ",
"       ## ",
"  ####### ",
" ##   ### ",
"###    ## ",
"##     ## ",
"###    ## ",
" ##   ### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ##   ### ",
"###    ## ",
"######### ",
"###       ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ######",
"   ###    ",
"   ##     ",
" ######## ",
"   ##     ",
"   ##     ",
"   ##     ",
"   ##     ",
"   ##     ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
" ##  #### ",
"###   ### ",
"##    ### ",
"###   ### ",
" ##   ### ",
"  ####### ",
"      ### "},{
"          ",
"          ",
"          ",
"          ",
"###       ",
" ##       ",
" ##       ",
" #######  ",
" ###  ### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"          ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"    ###   ",
"    ###   ",
"          ",
"          ",
" #######  ",
"     ###  ",
"     ###  ",
"     ###  ",
"     ###  ",
"     ###  ",
"     ###  ",
"     ##   "},{
"          ",
"          ",
"          ",
"          ",
" ###      ",
"  ##      ",
"  ##      ",
"  ## #####",
"  ##  ##  ",
"  #####   ",
"  ####    ",
"  #####   ",
"  ##  ##  ",
" ### #####",
"          "},{
"          ",
"          ",
"          ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"######### ",
"### ######",
"##  ## ###",
"##  ## ###",
"##  ## ###",
"##  ## ###",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"########  ",
" #### ### ",
" ###   ## ",
" ###   ## ",
" ###   ## ",
" ###   ## ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"########  ",
" ###   ## ",
" ##    ###",
" ##     ##",
" ##    ###",
" ###   ## ",
" #######  ",
" ##       "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
" ###  ### ",
"###    ## ",
"##     ## ",
"###    ## ",
" ##   ### ",
"  ####### ",
"       ## "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"   #### ##",
"   ##     ",
"   ##     ",
"   ##     ",
"   ##     ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
" ###      ",
"  ######  ",
"      ### ",
" ##    ## ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ##      ",
"  ##      ",
"########  ",
"  ##      ",
"  ##      ",
"  ##      ",
"  ##      ",
"  ### ### ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"###  #### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ### #### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ###   ## ",
"  ##  ##  ",
"  ### ##  ",
"   ####   ",
"   ####   ",
"    ###   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"####  ####",
" ##    ## ",
" ## ## ## ",
" ######## ",
" ######## ",
"  ######  ",
"  ##  ##  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
"  ##  ##  ",
"   ####   ",
"    ##    ",
"  ######  ",
" ###  ### ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##### ####",
" ###   ## ",
"  ##   ## ",
"  ### ##  ",
"   ## ##  ",
"   ####   ",
"    ###   ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
" ###  ##  ",
"     ##   ",
"    ##    ",
"   ##     ",
"  ##   ## ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"    ###   ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"  ###     ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   ###    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"     ###  ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ###     ",
" ## ## ## ",
"     ###  ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"####      ",
"####      ",
"####      ",
"####      ",
"####      ",
"####      ",
"####      ",
"####      ",
"####      ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
"###    ## ",
"#######   ",
"##        ",
"#######   ",
"###       ",
" ###   ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ###    ",
"   ###    ",
"  ###     "},{
"          ",
"          ",
"          ",
"          ",
"     #####",
"    ###   ",
"    ##    ",
"    ##    ",
"  ######  ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"   ###    "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ### ### ",
"  ### ##  ",
" ### ###  "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"### ######",
"### ######",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"    ##    ",
"   ####   ",
"  ## ###  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"####      ",
"####      ",
"####      ",
"######### ",
" #####    ",
"          ",
"  ### ####",
" #########",
" #########",
"  ### ####",
"          "},{
"          ",
"  ### ### ",
"   #####  ",
"    ###   ",
"          ",
"  ####### ",
" ###  ### ",
" ##    ## ",
" ###      ",
"  ######  ",
"      ### ",
" ##    ## ",
" ###   ## ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"  ###     ",
" ###      ",
"###       ",
" ###      ",
"  ###     ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
"### ##  ##",
"##  ##    ",
"##  ##### ",
"##  ##### ",
"##  ##### ",
"##  ##  ##",
"### ##  ##",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"  ### ### ",
"   #####  ",
"    ###   ",
"          ",
" ######## ",
" ###  ### ",
"     ###  ",
"     ##   ",
"    ##    ",
"   ##  ## ",
"  ##   ## ",
" ###   ## ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ###   ",
"    ####  ",
"     ###  ",
"     ###  ",
"      ##  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ####    ",
"  ####    ",
"  ###     ",
"  ###     ",
"  ##      ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
" ### ###  ",
"  ## ###  ",
"  ### ### ",
"   ##  ## ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ### ### ",
"  ### ##  ",
" ### ###  ",
" ##  ##   ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   #####  ",
"   #####  ",
"   ####   ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
" ## ######",
" ## ######",
"##########",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"  ### ### ",
"   #####  ",
"    ###   ",
"          ",
"  ####### ",
" ###  ### ",
" ###      ",
"  ######  ",
"      ### ",
" ##    ## ",
" #######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"     ###  ",
"      ### ",
"       ###",
"      ### ",
"     ###  ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"## #######",
"##  ##  ##",
"##  ######",
"##  ##    ",
"## #### ##",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
" ### ###  ",
"  #####   ",
"   ###    ",
"          ",
" ######## ",
" ###  ##  ",
"     ##   ",
"    ##    ",
"   ##     ",
"  ##   ## ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"####  ####",
" ###   ## ",
"  ##  ##  ",
"   ####   ",
"    ###   ",
"    ##    ",
"    ##    ",
"    ##    ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"   #####  ",
"  ##  ##  ",
" ##       ",
" ##       ",
"  ##  ##  ",
"   #####  ",
"    ##    ",
"    ##    ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ## ###  ",
"  ##      ",
"  ##      ",
"#######   ",
"   ##     ",
"  ###     ",
"  ##   ## ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"  ### ##  ",
"  ##  ### ",
"  ##  ##  ",
" ######## ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"######### ",
"  ##  ##  ",
"  #####   ",
"   ####   ",
" ######## ",
"    ##    ",
" ######## ",
"    ##    ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"   ###### ",
"  ##   ## ",
"  ##   ## ",
" #####    ",
"### ###   ",
" ###  ### ",
"  #### ###",
"    ##### ",
" ##   ##  ",
" ##   ##  ",
" #######  "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ###  ### ",
"##      ##",
"## #######",
"# ##  ## #",
"# ##     #",
"####    ##",
"##########",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ## ###  ",
"  ######  ",
"  ## ###  ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ### ###",
"  ### ### ",
" ### ###  ",
"### ###   ",
" ### ###  ",
"  ### ### ",
"   ### ###",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"##########",
"       ###",
"       ###",
"       ###",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ######## ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ###   ## ",
"##      ##",
"#######  #",
"#  ## ## #",
"#  ####  #",
"## ##### #",
"##########",
" ###   ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"##########",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
"   ####   ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"##########",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ######  ",
"     ##   ",
"   ###    ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ## ###  ",
"    ###   ",
"  ## ###  ",
"   ####   ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"     ##   ",
"    ##    ",
"   ##     ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"#### #### ",
" ###  ### ",
" ###  ### ",
" ###  ### ",
" ###  ### ",
" ### #### ",
" #########",
" ###      "},{
"          ",
"          ",
"          ",
"          ",
"  ########",
" #######  ",
" ## ####  ",
" ## ####  ",
" #######  ",
"  ######  ",
"    ####  ",
"    ####  ",
"    ####  ",
"    ####  ",
"  ########"},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"     ###  ",
"     ###  ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"  ####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"  ######  ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
"  ##  ##  ",
"   ####   ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"### ###   ",
" ### ###  ",
"  ### ### ",
"   ### ###",
"  ### ### ",
" ### ###  ",
"### ###   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
" ##       ",
"###       ",
" ##       ",
" ##     ##",
" ##   ### ",
"##########",
"  ########",
" ###  ####",
"     ## ##",
"       ###",
"          "},{
"          ",
"          ",
"          ",
"          ",
" ##       ",
"###       ",
" ##    ###",
" ##   ### ",
"#######   ",
"  ########",
" ### #####",
" #      ##",
"      ### ",
"     #####",
"          "},{
"          ",
"          ",
"          ",
"          ",
"#####     ",
"   ##     ",
" ###    ##",
"   ##  ###",
"########  ",
"    ######",
"  ### ####",
" ###  ####",
"     ## ##",
"       ###",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"   ####   ",
"   ####   ",
"          ",
"          ",
"    ##    ",
"  ###     ",
" ###      ",
" ##   ##  "},{
"          ",
"  ###     ",
"   ###    ",
"    ##    ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"          ",
"  ######  ",
" ######   ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"          ",
"          ",
" ## ###   ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"   ###    ",
"  #####   ",
"  #####   ",
"   ###    ",
"          ",
" ######   ",
"   ####   ",
"   ####   ",
"  ##  ##  ",
"  ##  ##  ",
" ######## ",
" ##    ## ",
" ##    ## ",
"####  ####",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" #########",
"   ###  ##",
"  ####    ",
"  ######  ",
"  ######  ",
" #######  ",
" ## ##   #",
" ## ##   #",
"##########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
" ###  ####",
" ##    ###",
"##        ",
"##        ",
"###       ",
" ##       ",
" ###   ###",
"  ######  ",
"    ##    "},{
"          ",
"   ###    ",
"    ###   ",
"     ##   ",
"          ",
"######### ",
" ###   ## ",
" ###   ## ",
" ######   ",
" ######   ",
" ######   ",
" ###      ",
" ###   ## ",
"######### ",
"          "},{
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
"######### ",
" ###   ## ",
" ###   ## ",
" ######   ",
" ######   ",
" ######   ",
" ###      ",
" ###   ## ",
"######### ",
"          "},{
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
"######### ",
" ###   ## ",
" ###   ## ",
" ######   ",
" ######   ",
" ######   ",
" ###      ",
" ###   ## ",
"######### ",
"          "},{
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"######### ",
" ###   ## ",
" ###   ## ",
" ######   ",
" ######   ",
" ######   ",
" ###      ",
" ###   ## ",
"######### ",
"          "},{
"          ",
"   ###    ",
"    ###   ",
"     ##   ",
"          ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"    ###   ",
"   #####  ",
"   ## ##  ",
"          ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
" ######## ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"#######   ",
" ##   ### ",
" ##    ## ",
" ##    ## ",
"###### ## ",
" ##    ## ",
" ##    ## ",
" ##   ### ",
"#######   ",
"          "},{
"          ",
"          ",
"   ###### ",
"  ######  ",
"          ",
"#### #####",
" ###   ## ",
" ####  ## ",
" ##### ## ",
" ## ## ## ",
" ## ##### ",
" ##  #### ",
" ##   ### ",
"##### ### ",
"          "},{
"          ",
"   ###    ",
"    ###   ",
"     ##   ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"     ###  ",
"    ###   ",
"   ###    ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"    ###   ",
"   #####  ",
"   ## ##  ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"          ",
"   ###### ",
"  ######  ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"  ### ### ",
"          ",
"   #####  ",
" ###  ### ",
" ##    ###",
"###     ##",
"##      ##",
"###     ##",
" ##    ###",
" ###  ### ",
"   #####  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" ###  ### ",
"  ######  ",
"   ####   ",
"   ####   ",
"  ######  ",
" ###  ### ",
"          ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"        ##",
"  ####### ",
" ###  ### ",
" ##  #####",
"###  ## ##",
"##  ##  ##",
"#####   ##",
" ####  ###",
" ###  ### ",
"########  ",
"##        "},{
"          ",
"   ###    ",
"    ###   ",
"     ##   ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"     ###  ",
"    ###   ",
"   ###    ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"    ###   ",
"   #####  ",
"   ## ##  ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"##########",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
"####  ####",
" ###   ## ",
"  ##  ##  ",
"   ####   ",
"    ###   ",
"    ##    ",
"    ##    ",
"    ##    ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ######   ",
"  ##      ",
"  ####### ",
"  ##   ###",
"  ##    ##",
"  ##   ###",
"  ######  ",
"  ##      ",
" ######   ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  #####   ",
" ### ###  ",
" ### ###  ",
" ######   ",
" ### ###  ",
" ###   ## ",
" ###   ## ",
" ##### ## ",
" ######## ",
"########  ",
"          "},{
"          ",
"          ",
"          ",
"   ##     ",
"   ###    ",
"    ###   ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"  ######  ",
" ######   ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"    ###   ",
"   #####  ",
"   #####  ",
"    ###   ",
"          ",
" ######   ",
"      ##  ",
"      ##  ",
" #######  ",
"###   ##  ",
"###  ###  ",
" #########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
" #### ### ",
" #  ### ##",
" #########",
"##  ##    ",
"##  ##    ",
"##  ### ##",
"######### ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ####### ",
" ###  ### ",
" ##       ",
" ##       ",
" ##       ",
" ###   ###",
"  ######  ",
"    ##    "},{
"          ",
"          ",
"          ",
"   ##     ",
"   ###    ",
"    ###   ",
"          ",
"  ######  ",
" ##   ### ",
"###    ## ",
"######### ",
"###       ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
"  ######  ",
" ##   ### ",
"###    ## ",
"######### ",
"###       ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
"  ######  ",
" ##   ### ",
"###    ## ",
"######### ",
"###       ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"  ######  ",
" ##   ### ",
"###    ## ",
"######### ",
"###       ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"   ##     ",
"   ###    ",
"    ###   ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"    ##    ",
"   ###    ",
"  ###     ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
" ## ###   ",
"          ",
" #####    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
"    ##    ",
" ######## ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ###### ",
"   ####   ",
"  ### ##  ",
"  ####### ",
" ###  ### ",
"###    ## ",
"##     ## ",
"###    ## ",
" ###  ### ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ###### ",
"  ######  ",
"          ",
"########  ",
" #### ### ",
" ###   ## ",
" ###   ## ",
" ###   ## ",
" ###   ## ",
"##########",
"          "},{
"          ",
"          ",
"          ",
"   ##     ",
"   ###    ",
"    ###   ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"    ###   ",
"   #####  ",
"   ## ##  ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"   ###### ",
"  ######  ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"  ######  ",
" ###  ### ",
" ##    ## ",
"###    ###",
" ##    ## ",
" ##    ## ",
"  ######  ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"    ##    ",
"          ",
"          ",
" ######## ",
"          ",
"          ",
"    ##    ",
"          ",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"          ",
"  ########",
" ###  ### ",
"###  #### ",
"##  ## ###",
" ####  ###",
" ###  ### ",
"########  ",
"          "},{
"          ",
"          ",
"          ",
"   ##     ",
"   ###    ",
"    ###   ",
"          ",
"###  #### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ### #### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"     ##   ",
"    ###   ",
"   ###    ",
"          ",
"###  #### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ### #### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"   ###    ",
"  #####   ",
"  ## ##   ",
"          ",
"###  #### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ### #### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"          ",
"          ",
"  ## ###  ",
"          ",
"###  #### ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ##    ## ",
" ### #### ",
"  ########",
"          "},{
"          ",
"          ",
"          ",
"      ##  ",
"     ###  ",
"    ###   ",
"          ",
"##### ####",
" ###   ## ",
"  ##   ## ",
"  ### ##  ",
"   ## ##  ",
"   ####   ",
"    ###   ",
"    ##    "},{
"          ",
"          ",
"          ",
"          ",
"###       ",
" ##       ",
" ##       ",
" #######  ",
" ###  ### ",
" ##    ###",
" ##     ##",
" ##    ###",
" ###  ### ",
" #######  ",
" ##       "},};

void glPrint(int xx,int yy, int zz, char*text, float size=0.004)
{
	int index=0,x,y,xxx;
//	glBegin(GL_TRIANGLES);
	glColor3d(0, 0, 1.0);
	xxx = xx;
	while(text[index]!=0){

		if (text[index]=='\n'){
			xx  = xxx;
			yy -= 15;
		}
		for (y=0;y<15;y++){
			for (x=0;x<10;x++){
				float xxx = (float)((xx+x)*size);
				float yyy = (float)((yy-y)*size);
				unsigned char b = text[index];

				if (letter[b][y][x]!=' '){
					
									
					glVertex3d(xxx, yyy, zz);
					glVertex3d(xxx+size,yyy, zz);
					glVertex3d(xxx,yyy+size, zz);
					

					glVertex3d(xxx,yyy+size, zz);
					glVertex3d(xxx+size,yyy+size, zz);
					glVertex3d(xxx+size,yyy, zz);
					
					
				}
			}
			
		}
		xx = xx + 12;
		index++;
	}
//	glEnd();
}
/*************************************************************************
* /brief function to draw the landscape                                  *
**************************************************************************/
void drawEnvironment()
{
	int x,z;

	// everything under 0 is water = 0 !!!
	for (x=0;x<MAX_WORLD;x++){
		for (z=0;z<MAX_WORLD;z++){
			if (landscape[x][z]<0){
				landscape[x][z]=0;
			}
		}
	}
	

	//---
//	if(objects == -1)
//		objects = glGenLists(MAX_DRAW_OBJECTS);
//	int id = objects + ObjectCounter;

//	glNewList(id, GL_COMPILE);

	for (int zz=MAX_WORLD-1;zz>0;zz--){
		for (int xx=0;xx<MAX_WORLD;xx++){

			double yy=landscape[xx][zz];
			double yy1=landscape[xx+1][zz];
			double yy2=landscape[xx][zz+1];
			double yy3=landscape[xx+1][zz+1];
						    

			double diff = (landscape[xx][zz]-landscape[xx+1][zz+1])/20.0;
			if (diff>1.0) 
				diff=1.0;
			if (diff<-1.0)
				diff=-1.0;

			if ((landscape[xx][zz]==0)){
				glColor3d(0.0,0.0,1.0);
			}
			else{
				glColor3d(0.0+diff, 0.0+diff, 1.0+diff/2.0);
			}

			glVertex3d((xx-MAX_WORLD/2.0)/10.0, (yy/10.0), (zz-MAX_WORLD/2.0)/10.0);
			glVertex3d((xx+1-MAX_WORLD/2.0)/10.0, (yy1/10.0), (zz-MAX_WORLD/2.0)/10.0);
			glVertex3d((xx-MAX_WORLD/2.0)/10.0, (yy2/10.0), (zz+1-MAX_WORLD/2.0)/10.0);

			glVertex3d((xx+1-MAX_WORLD/2.0)/10.0, (yy3/10.0), (zz+1-MAX_WORLD/2.0)/10.0);
			glVertex3d((xx+1-MAX_WORLD/2.0)/10.0, (yy1/10.0), (zz-MAX_WORLD/2.0)/10.0);
			glVertex3d((xx-MAX_WORLD/2.0)/10.0, (yy2/10.0), (zz+1-MAX_WORLD/2.0)/10.0);
		}
	}
//	glEnd();
//	glEndList();
//	ObjectCounter++;

}
/*************************************************************************
* /brief function to draw the robot                                      *
**************************************************************************/
void drawObject(RigidBody* entity,int nr, float xPos, float yPos, float zPos)
{
	for (int objCount=0;objCount<nr;objCount++){
		for(int i = 0; i < entity[objCount].MeshCounter; i++){

			float height =( (float) entity[objCount].massPoint[entity[objCount].triMesh[i].pointNum[0]].y-
							(float) entity[objCount].massPoint[entity[objCount].triMesh[i].pointNum[2]].y);

            glColor3d(0.0, 1.0, 0.0);

			if (entity[objCount].triMesh[i].pointNum[0]!=entity[objCount].triMesh[i].pointNum[1] && entity[objCount].triMesh[i].pointNum[0]!=entity[objCount].triMesh[i].pointNum[2]){
				Vector3D a,b,c, d,e, normal,view, light;

				int aa=entity[objCount].triMesh[i].pointNum[0];
				a.x = (float) entity[objCount].massPoint[aa].x;
				a.y = (float) entity[objCount].massPoint[aa].y;
				a.z = (float) entity[objCount].massPoint[aa].z;

				int bb=entity[objCount].triMesh[i].pointNum[1];
				b.x = (float) entity[objCount].massPoint[bb].x;
				b.y = (float) entity[objCount].massPoint[bb].y;
				b.z = (float) entity[objCount].massPoint[bb].z;

				int cc=entity[objCount].triMesh[i].pointNum[2];
				c.x = (float) entity[objCount].massPoint[cc].x;
				c.y = (float) entity[objCount].massPoint[cc].y;
				c.z = (float) entity[objCount].massPoint[cc].z;

				// --- calc color
				d.x = a.x - b.x;
				d.y = a.y - b.y;
				d.z = a.z - b.z;
				e.x = a.x - c.x;
				e.y = a.y - c.y;
				e.z = a.z - c.z;
				normal = crossProduct(d,e); // normal on the triangle

				// normalize normal vector
				float sum = sqrt(normal.x*normal.x + normal.y*normal.y + normal.z*normal.z);
				normal.x/=sum;
				normal.y/=sum;
				normal.z/=sum;

				// check if normal vector poins to camera
				view.x = 0;
				view.y = 1;
				view.z = 1.0;

				FLOAT_32 vangle = view.x*normal.x +
					              view.y*normal.y +
							      view.z*normal.z;
				if (vangle<0){ // if not invert direction
					normal.x *= -1;
					normal.y *= -1;
					normal.z *= -1;
				}
				light.x = 0.3;
				light.y = 1.0;
				light.z = 0.3;
				FLOAT_32 brightness = normal.x * light.x +
									  normal.y * light.y +
								      normal.z * light.z;
				brightness/=10.0f;

                glColor3d(0.0 + brightness, 1.0 + brightness, 0.0 + brightness);
			    // --- end calc color
				glVertex3d(a.x,a.y,a.z);
				glVertex3d(b.x,b.y,b.z);
				glVertex3d(c.x,c.y,c.z);

			}
			else{// single masspoint!
				int b=entity[objCount].triMesh[i].pointNum[0];
				float a1 = (float) entity[objCount].massPoint[b].x;
				float a2 = (float) entity[objCount].massPoint[b].y;
				float a3 = (float) entity[objCount].massPoint[b].z;
				glVertex3d(a1+0.01,a2     ,a3    );
				glVertex3d(a1     ,a2+0.01,a3    );
				glVertex3d(a1     ,a2     ,a3+0.01);
			}

		}
	}// endfor objCount
}


/*************************************************************************
* /brief function to draw a cylinder                                      *
**************************************************************************/
/*
void drawCylinder(float xPos, float yPos, float zPos,float xPos2, float yPos2, float zPos2, float radius)
{

    glPushMatrix();


    glBegin(GL_TRIANGLES);
	for(int i = 0; i < Meshcounter; i++){

		float color =0.75f+( (float) NeoPhysIx.massPoint[triMesh[i].pointNum[0]].y-
			                (float) NeoPhysIx.massPoint[triMesh[i].pointNum[2]].y)*10.0f;

		if (color<0.5) 
			color=0.5;
		if (color>1.0)
			color=1.0;

		glColor3d(color, 0, 0);

		int b=triMesh[i].pointNum[0];

		float a1 = (float) NeoPhysIx.massPoint[b].x;
		float a2 = (float) NeoPhysIx.massPoint[b].y;
		float a3 = (float) NeoPhysIx.massPoint[b].z;


		glVertex3d(a1,a2,a3);
 		glVertex3d((float)NeoPhysIx.massPoint[triMesh[i].pointNum[1]].x, 
				   (float)NeoPhysIx.massPoint[triMesh[i].pointNum[1]].y,
				   (float)NeoPhysIx.massPoint[triMesh[i].pointNum[1]].z);
		glVertex3d((float)NeoPhysIx.massPoint[triMesh[i].pointNum[2]].x, 
				   (float)NeoPhysIx.massPoint[triMesh[i].pointNum[2]].y,
				   (float)NeoPhysIx.massPoint[triMesh[i].pointNum[2]].z);
	}

    glEnd();
	
    glPopMatrix();
}

*/

/*************************************************************************
* /brief function to render the landscape and the robot                  *
**************************************************************************/
void Render(RigidBody* entity, int nr,char *text)
{
        //      Enable depth testing
        
        glEnable(GL_DEPTH_TEST);

        //      Heres our rendering. Clears the screen
        //        to black, clear the color and depth
        //        buffers, and reset our modelview matrix.
        
        glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

        glPushMatrix();
			glLoadIdentity();
			glTranslatef(xMove,yMove,zMove);
			glRotatef(xRotate, 1.0f, 0, 0);
			glRotatef(yRotate, 0, 1.0f, 0);

			glBegin(GL_TRIANGLES);
			drawEnvironment();
			drawObject(entity,nr,0.0f, 0.0f, 0.0f);
			glTranslatef(0.0,2.0f,0.0f);
			glEnd();
		glPopMatrix();

			// ####  Text printing  ####
		
		glPushMatrix();
			glBegin(GL_TRIANGLES);
			glPrint(-100,400,-4, text);

			glEnd();

		glPopMatrix();
		
        // #########################

        glFlush();

        //      Bring back buffer to foreground
        
        SwapBuffers(hDC);

}
/*************************************************************************
* /brief function to SetupPixelFormat                                    *
**************************************************************************/
// Set up pixel format for graphics initialization

void SetupPixelFormat()
{
    PIXELFORMATDESCRIPTOR pfd, *ppfd;
    int pixelformat;

    ppfd = &pfd;

    ppfd->nSize = sizeof(PIXELFORMATDESCRIPTOR);
    ppfd->nVersion = 1;
    ppfd->dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER;
//ppfd->dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DRAW_TO_BITMAP;
    ppfd->dwLayerMask = PFD_MAIN_PLANE;
    ppfd->iPixelType = PFD_TYPE_COLORINDEX;
    ppfd->cColorBits = 16;
    ppfd->cDepthBits = 16;
    ppfd->cAccumBits = 0;
    ppfd->cStencilBits = 0;

    pixelformat = ChoosePixelFormat(hDC, ppfd);
    SetPixelFormat(hDC, pixelformat, ppfd);
}

/******************************************************
* /brief : init graphics                              *
*******************************************************/

// Initialize OpenGL graphics
void InitGraphics()
{
    hDC = GetDC(hWnd);

    SetupPixelFormat();

    hRC = wglCreateContext(hDC);
    wglMakeCurrent(hDC, hRC);

    glClearColor(0, 0, 0, 0.5);
    glClearDepth(1.0);
    glEnable(GL_DEPTH_TEST);
}
/******************************************************
* /brief : function to resize  window                 *
*******************************************************/
// Resize graphics to fit window
void ResizeGraphics()
{
    // Get new window size
    RECT rect;
	int width, height;
	GLfloat aspect;

    GetClientRect(hWnd, &rect);
    width = rect.right;
    height = rect.bottom;
    aspect = (GLfloat)width / height;

    // Adjust graphics to window size
    glViewport(0, 0, width, height);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0, aspect, 1.0, 100.0);
    glMatrixMode(GL_MODELVIEW);
}
/************************************************************
* /brief function which handles a window resize or a destroy
**************************************************************/
// Handle window events and messages
LONG WINAPI MainWndProc (HWND hWnd, UINT uMsg, WPARAM  wParam, LPARAM  lParam)
{
    switch (uMsg)
    {
    case WM_SIZE:
        ResizeGraphics();
        break;

    case WM_CLOSE: 
        DestroyWindow(hWnd);
        break;
 
    case WM_DESTROY:
        PostQuitMessage(0);
        break;
 
    // Default event handler
    default: 
        return (LONG)DefWindowProc (hWnd, uMsg, wParam, lParam); 
        break; 
    } 
 
    return 1; 
}
/************************************************************
* /brief function which asks the keyboard and mouse actions
**************************************************************/
void evaluateMessages(MSG msg)
{
		switch (msg.message){
			case WM_CREATE:
			break;
			// --- Keyboard
			case WM_KEYDOWN:{
				if (msg.wParam>0)
					inkey = (unsigned char)msg.wParam;
				else
					inkey = (unsigned char)(256-msg.wParam);

				break;
			}
			case WM_KEYUP:{
				inkey = 0;
				break;
			}
			// --- Mouse
			case WM_LBUTTONDOWN:{
				mousekey|=1;
				break;
			}
			case WM_LBUTTONUP:{
				mousekey&=2;
				break;
			}
			case WM_RBUTTONDOWN:{
				mousekey|=2;
				break;
			}
			case WM_RBUTTONUP:{
				mousekey&=1;
				break;
			}
			case WM_MOUSEMOVE:{
				mousex = LOWORD(msg.lParam); 
				mousey = HIWORD(msg.lParam);
				break;
			}
		}

}
	
/************************************************************
* /brief main window function
**************************************************************/	
int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    const LPCWSTR appname = TEXT("NeoPhysIx");

    WNDCLASS wndclass;

    // Define the window class
    wndclass.style         = 0;
    wndclass.lpfnWndProc   = (WNDPROC)MainWndProc;
    wndclass.cbClsExtra    = 0;
    wndclass.cbWndExtra    = 0;
    wndclass.hInstance     = hInstance;
    wndclass.hIcon         = LoadIcon(hInstance, appname);
    wndclass.hCursor       = LoadCursor(NULL,IDC_ARROW);
    wndclass.hbrBackground = (HBRUSH)(COLOR_WINDOW+1);
    wndclass.lpszMenuName  = appname;
    wndclass.lpszClassName = appname;

    // Register the window class
    if (!RegisterClass(&wndclass)) return FALSE;
 
    // Create the window
    hWnd = CreateWindow(
            appname,
            appname,
            WS_OVERLAPPEDWINDOW | WS_CLIPSIBLINGS | WS_CLIPCHILDREN,
            CW_USEDEFAULT,
            CW_USEDEFAULT,
            800,
            600,
            NULL,
            NULL,
            hInstance,
            NULL);

    if (!hWnd) return FALSE;

    // Initialize OpenGL
    InitGraphics();

    // Display the window
    ShowWindow(hWnd, nCmdShow);
    UpdateWindow(hWnd);
	double alpha=0;


	myMain();

	int i=55;if (i==0){i++;}

    wglDeleteContext(hRC);
    ReleaseDC(hWnd, hDC);
	return 0;
}
/************************************************************
* /brief initializes the viewpoint
**************************************************************/
void initViewPoint()
{
	xMove =   0.0f;
	yMove =  -1.0f;
	zMove = -15.0f;

	xRotate     = 0.0f;
	yRotate     = 0.0f;
}
/************************************************************
* /brief steering of the graphical viewpoint
**************************************************************/
void mouseAction()
{
	static int xOld,yOld;
	if (mousekey==1){
				
		if ( xOld!=-1 && yOld!=-1 ){
			yRotate += mousex-xOld;
			xRotate += mousey-yOld;
		}

		xOld = mousex;
		yOld = mousey;
	}
	if (mousekey==2){
				
		if ( xOld!=-1 && yOld!=-1 ){
			xMove += (float)((mousex-xOld)/10.0);
			zMove += (float)((mousey-yOld)/10.0);
		}

		xOld = mousex;
		yOld = mousey;
	}
	if (mousekey==3){
				
		if ( xOld!=-1 && yOld!=-1 ){
			xMove += (float)((mousex-xOld)/10.0);
			yMove -= (float)((mousey-yOld)/10.0);
		}

		xOld = mousex;
		yOld = mousey;
	}
	if (mousekey==0){
		xOld = -1;
		yOld = -1;
	}

}

/************************************************************
* /brief build a quad
**************************************************************/
int buildQuad(const double &length){
	if(objects == -1)
		objects = glGenLists(MAX_DRAW_OBJECTS);

	double length_half = length/2;
	double length_half_neg = -length_half;

	glNewList(objects+ObjectCounter, GL_COMPILE);
		glBegin(GL_QUADS);
			//bottom
			glColor3d(0.0, 0.5, 0.0);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half, 1.0+length_half_neg, length_half);

			//top
			glColor3d(0.0, 0.5, 0.0);
			glVertex3d(length_half_neg, 1.0+length_half, length_half);
			glVertex3d(length_half_neg, 1.0+length_half, length_half_neg);
			glVertex3d(length_half, 1.0+length_half, length_half_neg);
			glVertex3d(length_half, 1.0+length_half, length_half);
			
			//left
			glColor3d(0.5, 0.0, 0.0);
			glVertex3d(length_half, 1.0+length_half, length_half_neg);
			glVertex3d(length_half, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half, 1.0+length_half_neg, length_half);
			glVertex3d(length_half, 1.0+length_half, length_half);

			//right
			glColor3d(0.5, 0.0, 0.0);
			glVertex3d(length_half_neg, 1.0+length_half, length_half_neg);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half);
			glVertex3d(length_half_neg, 1.0+length_half, length_half);

			//front
			glColor3d(0.0, 0.0, 0.5);
			glVertex3d(length_half, 1.0+length_half, length_half_neg);
			glVertex3d(length_half, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half_neg);
			glVertex3d(length_half_neg, 1.0+length_half, length_half_neg);

			//back
			glColor3d(0.0, 0.0, 0.5);
			glVertex3d(length_half, 1.0+length_half, length_half);
			glVertex3d(length_half, 1.0+length_half_neg, length_half);
			glVertex3d(length_half_neg, 1.0+length_half_neg, length_half);
			glVertex3d(length_half_neg, 1.0+length_half, length_half);

		glEnd();
	glEndList();

	ObjectCounter++;
	return 0;
}
/************************************************************
* /brief build a box
**************************************************************/
int buildBox(float width, float height, float depth){
	if(objects == -1)
		objects = glGenLists(MAX_DRAW_OBJECTS);
	
	int id = objects + ObjectCounter;

	return id;
}
/************************************************************
* /brief build a cylinder
**************************************************************/
int buildCylinder(float radius, float heigth){
	if(objects == -1)
		objects = glGenLists(MAX_DRAW_OBJECTS);

	float heigth_half = heigth/2;
	float heigth_half_neg = -heigth_half;

	float radius_half = radius/2;
	float radius_half_neg = -radius_half;

	int id = objects + ObjectCounter;

	glNewList(id, GL_COMPILE);
		glBegin(GL_QUAD_STRIP);

			glColor3d(colorR, colorG, colorB);

			glColor3d(0.0, 0.5, 0.0);
			glVertex3d(radius, heigth_half, radius_half_neg);
			glVertex3d(radius, heigth_half_neg, radius_half_neg);

			glVertex3d(radius, heigth_half, radius_half);
			glVertex3d(radius, heigth_half_neg, radius_half);

			glColor3d(0.0, 0.0, 0.5);
			glVertex3d(radius_half, heigth_half, radius);
			glVertex3d(radius_half, heigth_half_neg, radius);

			glVertex3d(radius_half_neg, heigth_half, radius);
			glVertex3d(radius_half_neg, heigth_half_neg, radius);

			glColor3d(0.5, 0.0, 0.0);
			glVertex3d(-radius, heigth_half, radius_half);
			glVertex3d(-radius, heigth_half_neg, radius_half);

			glVertex3d(-radius, heigth_half, radius_half_neg);
			glVertex3d(-radius, heigth_half_neg, radius_half_neg);

			glColor3d(0.0, 0.0, 0.5);
			glVertex3d(radius_half_neg, heigth_half, -radius);
			glVertex3d(radius_half_neg, heigth_half_neg, -radius);

			glVertex3d(radius_half, heigth_half, -radius);
			glVertex3d(radius_half, heigth_half_neg, -radius);

			glVertex3d(radius, heigth_half, radius_half_neg);
			glVertex3d(radius, heigth_half_neg, radius_half_neg);
		glEnd();
	glEndList();

	ObjectCounter++;

	return id;
}

/************************************************************
* /brief build a sphere
**************************************************************/
int buildSphere(float xx, float yy, float zz, float radius){
//	if(objects == -1)
//		objects = glGenLists(MAX_DRAW_OBJECTS);

	int lats = 20, longs = 20;

	int id = objects + ObjectCounter;

//	glNewList(id, GL_COMPILE);

        for (int i = 0; i <= lats; i++) {
                double lat0 = PI * (-0.5 + (double)(i - 1) / lats);
                double z0  = radius * sin(lat0);
                double zr0 =  radius * cos(lat0);
				
                double lat1 = PI * (-0.5 + (double) i / lats);
                double z1 = radius * sin(lat1);
                double zr1 = radius * cos(lat1);

                glBegin(GL_QUAD_STRIP);
                for (int j = 0; j <= longs; j++) {
                        double lng = 2 * PI * (double)(j - 1) / longs;
                        double x = cos(lng);
                        double y = sin(lng);
                       

                        glColor3d(colorR, colorG, colorB);
                        glNormal3d(xx + x * zr0, yy +  y * zr0, z0);
                        glVertex3d(xx + x * zr0, yy + y * zr0, z0);
                        glNormal3d(xx + x * zr1, yy + y * zr1, z1);
                        glVertex3d(xx + x * zr1, yy + y * zr1, z1);
                        
                }
                glEnd();
        }
//	glEndList();

	ObjectCounter++;

	return id;
}

void setColor(float r, float g, float b)
{
	colorR = r;
	colorG = g;
	colorB = b;
}